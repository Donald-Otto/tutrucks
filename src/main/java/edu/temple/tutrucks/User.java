package edu.temple.tutrucks;
// Generated Feb 15, 2016 6:30:46 PM by Hibernate Tools 4.3.1

import java.util.List;




/**
 * User generated by hbm2java
 * 
 * Represents a user of the TUTrucks application. Its mapping file is User.hbm.xml
 * 
 * @author Nick Dell'Osa
 * @version %PROJECT_VERSION%
 */
public class User  implements java.io.Serializable {

     private int id;
     private String userEmail;
     private String passWord;
     private boolean fbLink;
     private String avatar;
     private List<TruckReview> truckReviews;
     private List<ItemReview> itemReviews;
     private String displayName;
     private Permissions permissions;

     /**
      * Empty constructor required by Hibernate
      */
    public User() {
    }
    /**
     * Returns the ID of this user. Required by Hibernate
     * @return the ID of this user
     */
    public int getId() {
        return this.id;
    }
    /**
     * Sets the ID of this user. Required by Hibernate
     * @param id the ID of this user
     */
    public void setId(int id) {
        this.id = id;
    }
    /**
     * Returns the email this user registered with. Required by Hibernate
     * @return this user's email address
     */
    public String getUserEmail() {
        return this.userEmail;
    }
    /**
     * Sets the email address of this user. Required by Hibernate
     * @param userEmail this user's email address
     */
    public void setUserEmail(String userEmail) {
        this.userEmail = userEmail;
    }
    /**
     * Returns the salted and hashed user password stored in the database. Required by Hibernate
     * @return this user's password, properly salted and hashed
     */
    public String getPassWord() {
        return this.passWord;
    }
    /**
     * Sets this user's password. It is assumed that the string passed to this function has already been properly salted and hashed. Required by Hibernate
     * @param passWord this user's password, properly salted and hashed
     */
    public void setPassWord(String passWord) {
        this.passWord = passWord;
    }
    /**
     * Returns a boolean value reflecting whether this user signed up via Facebook. Required by Hibernate
     * @return true if the user signed up via Facebook, otherwise false
     */
    public boolean isFbLink() {
        return this.fbLink;
    }
    /**
     * Sets the boolean value reflecting whether this user signed up via Facebook. Required by Hibernate
     * @param fbLink boolean value reflecting whether this user signed up via Facebook
     */
    public void setFbLink(boolean fbLink) {
        this.fbLink = fbLink;
    }
    /**
     * Returns a link to this user's avatar. Required by Hibernate
     * @return a link to this user's avatar
     */
    public String getAvatar() {
        return this.avatar;
    }
    /**
     * Sets the link to this user's avatar. Required by Hibernate
     * @param avatar the link to this user's avatar
     */
    public void setAvatar(String avatar) {
        this.avatar = avatar;
    }
    /**
     * Returns a list of reviews for trucks written by this user. Required by Hibernate
     * @return the list of reviews for trucks written by this user
     */
    public List getTruckReviews() {
        return this.truckReviews;
    }
    /**
     * Returns a list of reviews for items written by this user. Required by Hibernate
     * @return the list of reviews for items written by this user
     */
    public List getItemReviews() {
        return itemReviews;
    }
    /**
     * Adds a review to this user's list of reviews. The user for the review must already be the user whose list the review is being added to. Required by Hibernate
     * @param r the review to add to this user's list of reviews
     */
    public void addReview(Review r) {
        if (!r.getUser().equals(this)) {
            //error handling
            return;
        }
        if (r.getClass() == TruckReview.class)
            truckReviews.add((TruckReview)r);
        else
            itemReviews.add((ItemReview)r);
    }
    /**
     * Sets the list of reviews for trucks written by this user. Required by Hibernate
     * @param truckReviews the list of reviews for trucks written by this user
     */
    public void setTruckReviews(List<TruckReview> truckReviews) {
        this.truckReviews = truckReviews;
    }
    /**
     * Sets the list of reviews for items written by this user. Required by Hibernate
     * @param itemReviews the list of reviews for items written by this user
     */
    public void setItemReviews(List<ItemReview> itemReviews) {
        this.itemReviews = itemReviews;
    }
    /**
     * Returns the display name for this user. Required by Hibernate
     * @return the display name for this user
     */
    public String getDisplayName() {
        return displayName;
    }
    /**
     * Sets the display name for this user. Required by Hibernate
     * @param displayName the display name for this user
     */
    public void setDisplayName(String displayName) {
        this.displayName = displayName;
    }
    /**
     * Returns the level of permissions available to this user. Required by Hibernate
     * @return the level of permissions available to this user
     */
    public Permissions getPermissions() {
        return permissions;
    }
    /**
     * Sets the level of permissions available to this user. Required by Hibernate
     * @param permissions the level of permissions available to this user
     */
    public void setPermissions(Permissions permissions) {
        this.permissions = permissions;
    }



}


